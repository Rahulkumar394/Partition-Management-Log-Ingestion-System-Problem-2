spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=log-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.client-id=consumer-${random.uuid}
spring.kafka.consumer.max-poll-records=100
spring.kafka.consumer.enable-auto-commit=true

# Management and Prometheus metrics configuration
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,prometheus
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=10s

server.port=8080
